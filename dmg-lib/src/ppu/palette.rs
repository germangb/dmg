use crate::ppu::Color;

pub type Palette = [Color; 4];

macro_rules! palette {
    ($(pub const $name:ident : Palette = $colors:expr ;)*) => {
        $(pub const $name: Palette = $colors;)*

        /// Return an iterator over the built-in palettes.
        pub fn palettes() -> impl Iterator<Item=Palette> {
            vec![$($colors,)*].into_iter()
        }
    }
}

palette! {
    pub const GRAYSCALE: Palette = [
        [0xff, 0xff, 0xff],
        [0xaa, 0xaa, 0xaa],
        [0x55, 0x55, 0x55],
        [0x00, 0x00, 0x00],
    ];
    pub const NOSTALGIA: Palette = [
        [0xd0, 0xd0, 0x58],
        [0xa0, 0xa8, 0x40],
        [0x70, 0x80, 0x28],
        [0x40, 0x50, 0x10],
    ];
    pub const ICE_CREAM_GB: Palette = [
        [0xff, 0xf6, 0xd3],
        [0xf9, 0xa8, 0x75],
        [0xeb, 0x6b, 0x6f],
        [0x7c, 0x3f, 0x58],
    ];
    pub const HARSHGREEN: Palette = [
        [0xbe, 0xeb, 0x71],
        [0x6a, 0xb4, 0x17],
        [0x37, 0x6d, 0x03],
        [0x17, 0x28, 0x08],
    ];
    pub const RUSTIC_GB: Palette = [
        [0xed, 0xb4, 0xa1],
        [0xa9, 0x68, 0x68],
        [0x76, 0x44, 0x62],
        [0x2c, 0x21, 0x37],
    ];
    pub const ANDRADE_GAMEBOY: Palette = [
        [0xe3, 0xee, 0xc0],
        [0xae, 0xba, 0x89],
        [0x5e, 0x67, 0x45],
        [0x20, 0x20, 0x20],
    ];
    pub const NINTENDO_GAMEBOY_BLACK_ZERO: Palette = [
        [0x7e, 0x84, 0x16],
        [0x57, 0x7b, 0x46],
        [0x38, 0x5d, 0x49],
        [0x2e, 0x46, 0x3d],
    ];
    pub const LINKS_AWAKENING_SGB: Palette = [
        [0xff, 0xff, 0xb5],
        [0x7b, 0xc6, 0x7b],
        [0x6b, 0x8c, 0x42],
        [0x5a, 0x39, 0x21],
    ];
    pub const METROID_2_SGB: Palette = [
        [0xae, 0xdf, 0x1e],
        [0xb6, 0x25, 0x58],
        [0x04, 0x7e, 0x60],
        [0x2c, 0x17, 0x00],
    ];
}
